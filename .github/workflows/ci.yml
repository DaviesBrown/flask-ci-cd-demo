name: CI/CD Pipeline

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    build-test-lint:
        name: Build, Lint & Test
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: ["3.10", "3.11"]

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Install dependencies
              run: |
                  pip install -r requirements.txt

            - name: Run lint
              run: flake8 .

            - name: Run tests with coverage
              run: |
                  coverage run -m pytest
                  coverage report -m

            - name: Upload coverage report
              uses: actions/upload-artifact@v4
              with:
                  name: coverage-report
                  path: .coverage

    docker-build:
        name: Build & Push Docker Image
        runs-on: ubuntu-latest
        needs: build-test-lint

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Log in to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build Docker image
              env:
                  REPO_OWNER_LOWER: ${{ github.repository_owner }}
              run: |
                  docker build -t ghcr.io/${REPO_OWNER_LOWER,,}/flask-ci-cd-demo:latest .

            - name: Push Docker image
              env:
                  REPO_OWNER_LOWER: ${{ github.repository_owner }}
              run: |
                  docker push ghcr.io/${REPO_OWNER_LOWER,,}/flask-ci-cd-demo:latest

    deploy:
        name: Simulate Deployment
        runs-on: ubuntu-latest
        needs: docker-build
        environment: staging

        steps:
            - name: Simulated Deploy
              env:
                  REPO_OWNER_LOWER: ${{ github.repository_owner }}
              run: |
                  echo "Deploying image to staging environment..."
                  echo "Image: ghcr.io/${REPO_OWNER_LOWER,,}/flask-ci-cd-demo:latest"
                  echo "âœ… Deployment successful!"
